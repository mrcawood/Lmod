===========================
step 1
lua ProjectDIR/src/lmod.in.lua shell --regression_testing --version
===========================
===========================
step 2
buildSh2MF ProjectDIR/rt/sh_to_modulefile/tstScript.sh
===========================
setenv("MY_NAME","tstScript.sh")
prepend_path("PATH","ProjectDIR/rt/sh_to_modulefile/bin")
append_path("PATH","ProjectDIR/rt/sh_to_modulefile/sbin")
setenv("TST_SCRIPT","1")
set_alias("fooAlias","foobin -q -l")
set_shell_function("banner"," \
    local str=\"$1\";\
    local RED='\\033[1;31m';\
    local NONE='\\033[0m';\
    echo \"${RED}${str}${NONE}\"\
","")
set_shell_function("fooFunc"," \
    echo \"arg1: $1\"\
","")
set_shell_function("junk"," \
    if [ -n \"${ZSH_VERSION:-}\" ]; then\
        \\echo \"junk\";\
    fi\
","")
set_shell_function("my_help"," \
    echo \"do not forget \\\"foo\\\"\"\
","")
set_shell_function("save_args"," \
    for arg in \"$@\";\
    do\
        printf \"%s\\n\" \"$arg\" | sed -e \"s/'/'\\\\\\\\''/g\" -e \"1s/^/'/\" -e \"\\$s/\\$/' \\\\\\\\/\";\
    done;\
    echo \" \"\
","")
complete("bash","XyZ123","-F _xyz123")
===========================
step 3
buildSh2MF --to TCL ProjectDIR/rt/sh_to_modulefile/tstScript.sh
===========================
#%Module
setenv MY_NAME {tstScript.sh}
prepend-path PATH {ProjectDIR/rt/sh_to_modulefile/bin}
append-path PATH {ProjectDIR/rt/sh_to_modulefile/sbin}
setenv TST_SCRIPT {1}
set-alias fooAlias {foobin -q -l}
set-function banner {
    local str="$1";
    local RED='\\033[1;31m';
    local NONE='\\033[0m';
    echo "${RED}${str}${NONE}"
}
set-function fooFunc {
    echo "arg1: $1"
}
set-function junk {
    if [ -n "${ZSH_VERSION:-}" ]; then
        \echo "junk";
    fi
}
set-function my_help {
    echo "do not forget \"foo\""
}
set-function save_args {
    for arg in "$@";
    do
        printf "%s\n" "$arg" | sed -e "s/'/'\\\\''/g" -e "1s/^/'/" -e "\$s/\$/' \\\\/";
    done;
    echo " "
}
complete bash XyZ123 {-F _xyz123}
===========================
step 4
buildSh2MF ProjectDIR/rt/sh_to_modulefile/path_both_ends.sh
===========================
prepend_path("PATH","/scratch1/projects/compilers/intel20u0/debugger_2020/gdb/intel64/bin")
prepend_path("PATH","/scratch1/projects/compilers/intel20u0/compilers_and_libraries_2020.0.166/linux/mpi/intel64/bin")
prepend_path("PATH","/scratch1/projects/compilers/intel20u0/compilers_and_libraries_2020.0.166/linux/mpi/intel64/libfabric/bin")
prepend_path("PATH","/scratch1/projects/compilers/intel20u0/compilers_and_libraries_2020.0.166/linux/bin")
prepend_path("PATH","/scratch1/projects/compilers/intel20u0/compilers_and_libraries_2020.0.166/linux/bin/intel64")
prepend_path("PATH","/scratch1/projects/compilers/intel20u0/parallel_studio_xe_2020.0.088/bin/intel64")
prepend_path("PATH","/scratch1/projects/compilers/intel20u0/itac/2020.0.015/intel64/bin")
prepend_path("PATH","/scratch1/projects/compilers/intel20u0/itac/2020.0.015/intel64/bin")
prepend_path("PATH","/scratch1/projects/compilers/intel20u0/parallel_studio_xe_2020/bin64")
prepend_path("PATH","/scratch1/projects/compilers/intel20u0/parallel_studio_xe_2020/bin64")
prepend_path("PATH","/scratch1/projects/compilers/intel20u0/parallel_studio_xe_2020/bin64")
prepend_path("PATH","/scratch1/projects/compilers/intel20u0/intelpython3/condabin")
prepend_path("PATH","/scratch1/projects/compilers/intel20u0/intelpython3/bin")
append_path("PATH","/scratch1/projects/compilers/intel20u0/parallel_studio_xe_2020.0.088/bin")
===========================
step 5
buildSh2MF --from csh ProjectDIR/rt/sh_to_modulefile/cshScript.csh
===========================
setenv("FOO_BAR","1")
setenv("TST_SCRIPT","tst_script")
set_alias("fB","ls -aFC")
set_alias("fooBar","ls -aFC")
===========================
step 6
buildSh2MF ProjectDIR/rt/sh_to_modulefile/broken.sh
===========================
===========================
step 7
buildSh2MF ProjectDIR/rt/sh_to_modulefile/unalias.sh
===========================
===========================
step 8
lua ProjectDIR/src/lmod.in.lua shell --regression_testing show wrapperSh/1.0
===========================
__LMOD_REF_COUNT_MODULEPATH=ProjectDIR/rt/sh_to_modulefile/mf:1;
export __LMOD_REF_COUNT_MODULEPATH;
MODULEPATH=ProjectDIR/rt/sh_to_modulefile/mf;
export MODULEPATH;
_ModuleTable_='_ModuleTable_={MTversion=3,depthT={},family={},mT={},mpathA={"ProjectDIR/rt/sh_to_modulefile/mf",},systemBaseMPATH="ProjectDIR/rt/sh_to_modulefile/mf",}';
export _ModuleTable_;
===========================
step 9
lua ProjectDIR/src/lmod.in.lua shell --regression_testing load wrapperSh/1.0
===========================
false
===========================
step 10
lua ProjectDIR/src/lmod.in.lua shell --regression_testing show wrapperSh/1.0
===========================
MODULEPATH=ProjectDIR/rt/sh_to_modulefile/mf;
export MODULEPATH;
_ModuleTable_='_ModuleTable_={MTversion=3,depthT={},family={},mT={},mpathA={"ProjectDIR/rt/sh_to_modulefile/mf",},systemBaseMPATH="ProjectDIR/rt/sh_to_modulefile/mf",}';
export _ModuleTable_;
===========================
step 11
lua ProjectDIR/src/lmod.in.lua shell --regression_testing refresh
===========================
MODULEPATH=ProjectDIR/rt/sh_to_modulefile/mf;
export MODULEPATH;
_ModuleTable_='_ModuleTable_={MTversion=3,depthT={},family={},mT={},mpathA={"ProjectDIR/rt/sh_to_modulefile/mf",},systemBaseMPATH="ProjectDIR/rt/sh_to_modulefile/mf",}';
export _ModuleTable_;
===========================
step 12
lua ProjectDIR/src/lmod.in.lua shell --regression_testing list
===========================
MODULEPATH=ProjectDIR/rt/sh_to_modulefile/mf;
export MODULEPATH;
_ModuleTable_='_ModuleTable_={MTversion=3,depthT={},family={},mT={},mpathA={"ProjectDIR/rt/sh_to_modulefile/mf",},systemBaseMPATH="ProjectDIR/rt/sh_to_modulefile/mf",}';
export _ModuleTable_;
===========================
step 13
lua ProjectDIR/src/lmod.in.lua shell --regression_testing --mt
===========================
===========================
step 14
lua ProjectDIR/src/lmod.in.lua shell --regression_testing unload wrapperSh/1.0
===========================
MODULEPATH=ProjectDIR/rt/sh_to_modulefile/mf;
export MODULEPATH;
_ModuleTable_='_ModuleTable_={MTversion=3,depthT={},family={},mT={},mpathA={"ProjectDIR/rt/sh_to_modulefile/mf",},systemBaseMPATH="ProjectDIR/rt/sh_to_modulefile/mf",}';
export _ModuleTable_;
===========================
step 15
lua ProjectDIR/src/lmod.in.lua shell --regression_testing load brokenSh/1.0
===========================
false
===========================
step 16
lua ProjectDIR/src/lmod.in.lua shell --regression_testing load wrapperSh/1.0
===========================
false
===========================
step 17
lua ProjectDIR/src/lmod.in.lua shell --regression_testing save
===========================
MODULEPATH=ProjectDIR/rt/sh_to_modulefile/mf;
export MODULEPATH;
_ModuleTable_='_ModuleTable_={MTversion=3,depthT={},family={},mT={},mpathA={"ProjectDIR/rt/sh_to_modulefile/mf",},systemBaseMPATH="ProjectDIR/rt/sh_to_modulefile/mf",}';
export _ModuleTable_;
===========================
step 18
lua ProjectDIR/src/lmod.in.lua shell --regression_testing restore
===========================
false
===========================
step 19
lua ProjectDIR/src/lmod.in.lua shell --regression_testing --mt
===========================
===========================
step 20
lua ProjectDIR/src/lmod.in.lua shell --regression_testing load A
===========================
false
===========================
step 21
lua ProjectDIR/src/lmod.in.lua shell --regression_testing list
===========================
__LMOD_REF_COUNT_MODULEPATH=OutputDIR/mf:1;
export __LMOD_REF_COUNT_MODULEPATH;
MODULEPATH=OutputDIR/mf;
export MODULEPATH;
_ModuleTable_='_ModuleTable_={MTversion=3,depthT={},family={},mT={},mpathA={"OutputDIR/mf",},systemBaseMPATH="OutputDIR/mf",}';
export _ModuleTable_;
